#!/bin/sh
source ScriptFunctions
Import GoboLinux
Import Log
Import OptionParser
Import Process

source GoboPath

### Options ###################################################################

scriptDescription="Install a set of GoboLinux packages, localized at /Programs, in a target directory, generally a new GoboLinux installation."
scriptCredits="Copyright (C) 2003. Released under the GNU GPL."
helpOnNoArguments=yes
scriptUsage="<profile> <destination_directory>"
scriptExample="Base /Mount/GoboLinux"
scriptNotes="This script is used on the distribution installation process, to install a single package on a GoboLinux system use InstallPackage instead."
Add_Option_Entry "s" "super-user" "Super-user's login." "gobo"

Parse_Options "$@"

### Operation #################################################################

Verify_Superuser

profile="$(Arg 1)"
dest_dir="$(Arg 2)"

[ -r "${profile}"  ] || Die "Please inform the profile file. --help for more information."
[ -d "${dest_dir}" ] || Die "The install directory \"${dest_dir}\" don't exists or isn't a directory."

Is_Entry "super-user" && superuser="`Entry super-user`" || superuser='gobo'

function install_base() {
   Log_Normal "Creating directory "${goboSystem}
   mkdir ${dest_dir}/${goboSystem}

   Log_Normal "Installing directory "${goboSystem}/Settings
   cp -a ${goboSystem}/Settings  ${dest_dir}/${goboSystem}

   Log_Normal "Installing directory "${goboSystem}/Variable
   cp -a ${goboSystem}/Variable  ${dest_dir}/${goboSystem} 2> /dev/null
   rm -rf ${dest_dir}/${goboSystem}/Variable/run/*
   #rm -rf ${dest_dir}/${goboSystem}/Variable/tmp/*  &> /dev/null

   Log_Normal "Installing directory "${goboSystem}/Links
   cp -a ${goboSystem}/Links  ${dest_dir}/${goboSystem}

   Log_Normal "Installing directory "${goboSystem}/Kernel
   mkdir ${dest_dir}/${goboSystem}/Kernel
   mkdir ${dest_dir}/${goboSystem}/Kernel/Devices
   mkdir ${dest_dir}/${goboSystem}/Kernel/Objects
   mkdir ${dest_dir}/${goboSystem}/Kernel/Status

   Log_Normal "Installing directory "${goboSystem}/Kernel/Boot
   cp -a ${goboSystem}/Kernel/Boot  ${dest_dir}/${goboSystem}/Kernel

   Log_Normal "Installing directory "${goboSystem}/Kernel/Modules
   cp -a ${goboSystem}/Kernel/Modules  ${dest_dir}/${goboSystem}/Kernel

   Log_Normal "Installing directory "${goboMount}
   mkdir ${dest_dir}/${goboMount}
   mkdir ${dest_dir}/${goboMount}/CD-ROM
   mkdir ${dest_dir}/${goboMount}/Floppy

   Log_Normal "Installing legacy directory "/usr
   cp -a /usr ${dest_dir}/usr

   Log_Normal "Installing directory "/Files
   cp -a /Files ${dest_dir}/Files

   Log_Normal "Creating "/Depot
   mkdir ${dest_dir}/Depot/

   Log_Normal "Installing legacy links on "${dest_dir}
   cp -a /bin /dev /etc /lib /proc /sbin /sys /tmp /var ${dest_dir}

   Log_Normal "Installing directory "${goboUsers}/${superuser}
   mkdir -p ${dest_dir}/${goboUsers}
   cp -a ${goboPrograms}/EnhancedSkel/Current/testuser ${dest_dir}/${goboUsers}/${superuser} || mkdir ${dest_dir}/${goboUsers}/${superuser}
   chmod 600 ${dest_dir}/${goboUsers}/${superuser}/

   cd ${dest_dir}/${goboUsers}/${superuser}
   GrepReplace -R "/Users/testuser" "${goboUsers}/${superuser}/"
   GrepReplace -R "prompt lode cyan" "prompt lode red" '.zshrc'
   rm -f '.zshrc~'
   cd - &> /dev/null

   mkdir -p ${dest_dir}/System/Variable/tmp/{.ICE-unix,.X11-unix} -m a+rwxt

   Log_Normal "Creating directory "${goboPrograms}
   mkdir ${dest_dir}/${goboPrograms}

   Log_Normal "Creating dev nodes"
   mknod -m 600 ${dest_dir}/System/Kernel/Devices/console c 5 1
   mknod -m 666 ${dest_dir}/System/Kernel/Devices/null    c 1 3
}

function install_packages() {
   while read line
   do
      Log_Normal "Installing program: $line"
      if [ ! -d "${goboPrograms}/${line}" ]
      then
         Log_Error "Could not find program named \"${line}\""
         continue
      fi

      cp -a ${goboPrograms}/${line} ${dest_dir}/${goboPrograms}

      if [ -d ${goboPrograms}/${line}/Current/Resources/Defaults/Settings ]
      then
         rm -rf ${dest_dir}/${goboPrograms}/${line}/Settings &> /dev/null
         cp -a ${goboPrograms}/${line}/Current/Resources/Defaults/Settings ${dest_dir}/${goboPrograms}/${line}
      fi
      # SymlinkProgram ${line} &> /dev/null
   done < ${profile}
}

### Main ####################################################################

[ -d ${dest_dir}/${goboSystem} ] || install_base

install_packages

Log_Normal "Removing broken links from ${dest_dir}${goboLinks}"
chroot ${dest_dir} find ${goboLinks} > /tmp/Links
chroot ${dest_dir} RemoveBroken < /tmp/Links &> /dev/null
chroot ${dest_dir} rm -f /tmp/Links
Log_Normal "Removing broken links from ${dest_dir}/${goboSettings}"
chroot ${dest_dir} find ${goboSettings} > /tmp/Links
chroot ${dest_dir} RemoveBroken < /tmp/Links &> /dev/null
chroot ${dest_dir} rm -f /tmp/Links
chroot ${dest_dir} ldconfig
